// <auto-generated />
using Lego.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Lego.Migrations
{
    [DbContext(typeof(LegoContext))]
    [Migration("20250605204546_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Lego.Models.LegoColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<char>("IsTrans")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("is_trans");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Rgb")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("rgb");

                    b.HasKey("Id")
                        .HasName("lego_colors_pkey");

                    b.ToTable("lego_colors", (string)null);
                });

            modelBuilder.Entity("Lego.Models.LegoInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("SetNum")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("set_num");

                    b.Property<int>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.HasKey("Id")
                        .HasName("lego_inventories_pkey");

                    b.ToTable("lego_inventories", (string)null);
                });

            modelBuilder.Entity("Lego.Models.LegoInventoryPart", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("inventory_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InventoryId"));

                    b.Property<int>("ColorId")
                        .HasColumnType("integer")
                        .HasColumnName("color_id");

                    b.Property<bool>("IsSpare")
                        .HasColumnType("boolean")
                        .HasColumnName("is_spare");

                    b.Property<string>("PartNum")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("part_num");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("InventoryId")
                        .HasName("lego_inv_part_pkey");

                    b.HasIndex("ColorId");

                    b.ToTable("LegoInventoryParts");
                });

            modelBuilder.Entity("Lego.Models.LegoInventorySet", b =>
                {
                    b.Property<int>("InventoryId")
                        .HasColumnType("integer")
                        .HasColumnName("inventory_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<string>("SetNum")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("set_num");

                    b.ToTable("lego_inventory_sets", (string)null);
                });

            modelBuilder.Entity("Lego.Models.LegoPart", b =>
                {
                    b.Property<string>("PartNum")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("part_num");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("PartCatId")
                        .HasColumnType("integer")
                        .HasColumnName("part_cat_id");

                    b.HasKey("PartNum")
                        .HasName("lego_parts_pkey");

                    b.ToTable("lego_parts", (string)null);
                });

            modelBuilder.Entity("Lego.Models.LegoPartCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("lego_part_categories_pkey");

                    b.ToTable("lego_part_categories", (string)null);
                });

            modelBuilder.Entity("Lego.Models.LegoSet", b =>
                {
                    b.Property<string>("SetNum")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("set_num");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<int?>("NumParts")
                        .HasColumnType("integer")
                        .HasColumnName("num_parts");

                    b.Property<int?>("ThemeId")
                        .HasColumnType("integer")
                        .HasColumnName("theme_id");

                    b.Property<int?>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("SetNum")
                        .HasName("lego_sets_pkey");

                    b.ToTable("lego_sets", (string)null);
                });

            modelBuilder.Entity("Lego.Models.LegoTheme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("parent_id");

                    b.HasKey("Id")
                        .HasName("lego_themes_pkey");

                    b.ToTable("lego_themes", (string)null);
                });

            modelBuilder.Entity("Lego.Models.LegoInventoryPart", b =>
                {
                    b.HasOne("Lego.Models.LegoColor", "Color")
                        .WithMany("legoInventoryParts")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");
                });

            modelBuilder.Entity("Lego.Models.LegoColor", b =>
                {
                    b.Navigation("legoInventoryParts");
                });
#pragma warning restore 612, 618
        }
    }
}
